'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.zip = undefined;

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

exports.isObject = isObject;
exports.isUndefined = isUndefined;
exports.isDefined = isDefined;
exports.isArray = isArray;
exports.isString = isString;
exports.isFunction = isFunction;
exports.parseJson = parseJson;
exports.copy = copy;

var _customError = require('./customError');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isObject(obj) {
	return (typeof obj === 'undefined' ? 'undefined' : (0, _typeof3.default)(obj)) === 'object' && !Array.isArray(obj);
}

function isUndefined(obj) {
	return obj == null;
}

function isDefined(obj) {
	return !isUndefined(obj);
}

function isArray(obj) {
	return Array.isArray(obj);
}

function isString(obj) {
	return typeof obj === "string";
}

function isFunction(obj) {
	return typeof obj === 'function';
}

// lists ::= [aList, aList]
// aList ::= [object]
// @return like python's zip function
// shortest length
// from https://stackoverflow.com/a/10284006
var zip = exports.zip = function zip(rows) {
	return rows[0].map(function (_, c) {
		return rows.map(function (row) {
			return row[c];
		});
	});
};

function parseJson(str, filename) {
	try {
		return JSON.parse(str);
	} catch (error) {
		throw (0, _customError.JsonParseError)(filename, error.message);
	}
}

function copy(obj) {
	return JSON.parse((0, _stringify2.default)(obj));
}